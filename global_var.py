DEBUG  = 1
#这里存放每次协商的密钥变量
#分别是客户端的公钥、私钥、模
#clientRasPublicKey1 = '17748945772387551889'
#clientRasPrivateKey1 = '9406022805006868866486600872971491109'
#clientRasModuleKey1 = '140414834378881486757244753741725644673'
#下面的是固定的客户端写死的密钥信息
clientRasPublicKey1 = '9746936887104300643'
clientRasPrivateKey1 = '2939204858239587972184830661933817707'
clientRasModuleKey1 = '299002966083108665575312080329895001511'
#分别是服务端的公钥、私钥、模
serverRasPublicKey1 = '15535313758997174017'
serverRasPrivateKey1 = '117901827555039719180758072390236403969'
serverRasModuleKey1 = '158969730124549486039039797790946060069'

#临时key
tempkey = ''

#存放服务端的ip+port
serv = ''
#数据库连接信息，用字典保存，字段分别是：host,port,user,passwd,db
db = {}
#存放临时密钥
tempkey = ''
#存放会话中的令牌
tokenid = ''
#这里定义服务端的连接串
uc = ''
cc = ''
pc = ''
sc = ''
#这里定义命令串，用于检测返回消息是否被篡改过
COMMAND_STR = ''
#定义返回消息中的body-sign
retn_bodysign = ''
#定义返回的消息
retn_msg = ''
#定义客户端标识
terminalid = ''
#参数常量表，用于标识任务数字对应的消息字串
#注意这里以数据为索引，也就是数字是作为字典的键(key)
const_dic = {}
#这个也是命令表的字典，但是以命令字段字串作为键
const_dic_r = {}
#判断是否用一个session来处理所有的任务
onesession = 1
#临时存放批价时返回的数据
retn_transid = ''
retn_feeid = ''


#这里存放客户端的初始密钥信息,存放的分别是密钥编号，公钥，私钥，模
CurrInitKeySeq = 1
CurrInitServKeySeq = 1
TerInitKey = (
	    (1,'16600699370148785491','109030216437523923998826000727006452907','221830770157489249735284283697804537027'),\
              (2,'11671827460257032807','29287608078770455115394009142284367703','144944989883090294279572854504566684489'),\
              (3,'17630604809438572631','45379474867101280988911573307333191943','128983227031423179301649257110078809933'),\
              (4,'18391833182634219593','215029385276543810283160659811513777037','220822347998761374163705311066405018313'),\
              (5,'11052934545381671557','178295522746191829653600708231690296173','194890490329680528457599788711134632619'),\
              (6,'16292761417731898643','208788477541262938996336526011389238483','275465137824122826754798986783377180359'),\
              (7,'9490028318668513171','85888055562689726241160666141485768091','172451669946273221625270579720517031297'),\
              (8,'10644575357131322851','78761914494092854064495079006262766731','196569819266767013058819582324039846317'),\
              (9,'17122447355271082771','108551145846552728634353810890507773031','189309215204799584467148300176295271053'),\
              (10,'9611309164006536473','89825661156956836519649340894349773437','179224290317034189548369590443729258173'),\
              (11,'10456652060425797949','102289968380605849499611560426357201409','242135496571322644147219406541139774357'),\
              (12,'17040737521359761761','97071465035550789692089391953569147481','121521655153327361326920208778052258487'),\
              (13,'17748945772387551889','9406022805006868866486600872971491109','140414834378881486757244753741725644673'),\
              (14,'10388293354943676661','53244926414362761537579720659122599745','150869320639729472503440855972185953781'),\
              (15,'17025183834781826537','235266955523594047317549301965303293273','237067204792747899704561163077146703477'),\
              (16,'15535313758997174017','117901827555039719180758072390236403969','158969730124549486039039797790946060069'),\
              (17,'15535313758997174017','117901827555039719180758072390236403969','158969730124549486039039797790946060069')
              )
